name: Publish library  

env:
  PROJECT_PATH: src/MyFinancialHub.Application.CQRS
  PROJECT_NAME: MyFinancialHub.Application.CQRS
  PROJECT_NET_VERSION: 8.0.x
on:
  push:
     tags:        
      - "**"
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.PROJECT_NET_VERSION }}
    - name: Write release version
      run: |
        VERSION=${GITHUB_REF_NAME#v}
        echo Version: $VERSION
        echo "VERSION=$VERSION" >> $GITHUB_ENV
    - name: Restore dependencies
      run: dotnet restore ${{ env.PROJECT_PATH }}
    - name: Build project
      run: dotnet build ${{ env.PROJECT_PATH }} --no-restore --configuration Release
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v4.6.2
      with:
        name: ${{ github.ref_name }}
        path: '${{ env.PROJECT_PATH }}/bin/Release'
        retention-days: 14
  publish:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.PROJECT_NET_VERSION }}
      - name: Write release version
        run: |
          VERSION=${GITHUB_REF_NAME#v}
          echo Version: $VERSION
          echo "VERSION=$VERSION" >> $GITHUB_ENV
      - name: Download a Build Artifact
        uses: actions/download-artifact@v4.2.1
        with:
          name: ${{ github.ref_name }}
          path: '${{ env.PROJECT_PATH }}/bin/Release'
      - name: Restore dependencies
        run: dotnet restore ${{ env.PROJECT_PATH }}
      - name: Pack library
        run: dotnet pack ${{ env.PROJECT_PATH }} --configuration Release /p:Version=${VERSION} --no-build --output .
      - name: Push library to Github Packages
        run: dotnet nuget push ${{ env.PROJECT_NAME }}.${VERSION}.nupkg --source https://nuget.pkg.github.com/My-Financial-Hub/index.json --api-key "${{secrets.GH_NUGET_APIKEY}}"
